**გადაიტანეთ ლექციაში განხილული API თქვენთან და დაამატეთ შემდეგი ფუნცქიონალები:**

1. დაამატეთ ვირტუალური თვისება სახელად 'priceWithTax', რომელიც გამოითვლის პროდუქტის ფასს 20%იანი გადასახადის ჩათვლით. მაგალითად პროდუქტის ფასი თუ 100$-ია, priceWithTax იქნება 120$.

2. დაამატეთ ვირტუალური თვისება სახელად 'capacity', რომელიც ტოლი იქნება პროდუქტის ფასისა და რაოდენობის ნამრავლის.

3. დაუმატეთ archived ველი თითოეულ პროდუქტს(default value ექნება false). წაშლის მომენტში ბაზიდან რეალურად არ წაშალოთ პროდუქტი, უბრალოდ archived გახადეთ true. (აქ მეთოდის შექმნა მოგიწევთ სქემაში, დასერჩეთ)

4. შექმენით აგრეგაცია, რომელიც დააჯგუფებს პროდუქტებს ფასის დიაპაზონის მიხედვით. აირჩიეთ 3 ან 4 დიაპაზონი(თქვენით განსაზღვრეთ რა დიაპაზონები იყოს). ამ დიაპაზონებში გამოითვალეთ რა არის პროდუქტების საშუალო, მინიმალური და მაქსიმალური ფასი. ამ აგრეგაციისთვის შექმენით ახალი როუტი.


5. შექმენით ახალი სქემა(კოლექცია) სახელად StockHistory. დაამატეთ pre-save middleware, რომელიც ასახავს მარაგის ცვლილებებს StockHistory-ში. ყოველ მარაგის ცვლილებაზე StockHistory-ში შეინახება პროდუქტის აიდი, რომლის მარაგიც შეიცვალა და განახლებული მარაგის მნიშვნელობა.



დაამატეთ სვაგერის დოკუმენტაცია თქვენს API-ში